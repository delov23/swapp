// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> renders without crashing 1`] = `
<ApolloProvider
  client={
    ApolloClient {
      "cache": InMemoryCache {
        "addTypename": true,
        "cacheKeyRoot": KeyTrie {
          "weakness": true,
        },
        "config": Object {
          "addTypename": true,
          "dataIdFromObject": [Function],
          "fragmentMatcher": HeuristicFragmentMatcher {},
          "freezeResults": false,
          "resultCaching": true,
        },
        "data": DepTrackingCache {
          "data": Object {
            "ROOT_QUERY": Object {
              "authenticated": false,
            },
          },
          "depend": [Function],
        },
        "maybeBroadcastWatch": [Function],
        "optimisticData": DepTrackingCache {
          "data": Object {
            "ROOT_QUERY": Object {
              "authenticated": false,
            },
          },
          "depend": [Function],
        },
        "silenceBroadcast": false,
        "storeReader": StoreReader {
          "executeSelectionSet": [Function],
          "executeStoreQuery": [Function],
          "executeSubSelectedArray": [Function],
          "freezeResults": false,
        },
        "storeWriter": StoreWriter {},
        "typenameDocumentCache": Map {
          Object {
            "definitions": Array [
              Object {
                "kind": "OperationDefinition",
                "name": Object {
                  "kind": "Name",
                  "value": "GeneratedClientQuery",
                },
                "operation": "query",
                "selectionSet": Object {
                  "kind": "SelectionSet",
                  "selections": Array [
                    Object {
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "authenticated",
                      },
                      "selectionSet": undefined,
                    },
                  ],
                },
              },
            ],
            "kind": "Document",
          } => Object {
            "definitions": Array [
              Object {
                "kind": "OperationDefinition",
                "name": Object {
                  "kind": "Name",
                  "value": "GeneratedClientQuery",
                },
                "operation": "query",
                "selectionSet": Object {
                  "kind": "SelectionSet",
                  "selections": Array [
                    Object {
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "authenticated",
                      },
                      "selectionSet": undefined,
                    },
                  ],
                },
              },
            ],
            "kind": "Document",
          },
        },
        "watches": Set {},
      },
      "clearStoreCallbacks": Array [],
      "defaultOptions": Object {},
      "disableNetworkFetches": false,
      "link": ApolloLink {
        "request": [Function],
      },
      "localState": LocalState {
        "cache": InMemoryCache {
          "addTypename": true,
          "cacheKeyRoot": KeyTrie {
            "weakness": true,
          },
          "config": Object {
            "addTypename": true,
            "dataIdFromObject": [Function],
            "fragmentMatcher": HeuristicFragmentMatcher {},
            "freezeResults": false,
            "resultCaching": true,
          },
          "data": DepTrackingCache {
            "data": Object {
              "ROOT_QUERY": Object {
                "authenticated": false,
              },
            },
            "depend": [Function],
          },
          "maybeBroadcastWatch": [Function],
          "optimisticData": DepTrackingCache {
            "data": Object {
              "ROOT_QUERY": Object {
                "authenticated": false,
              },
            },
            "depend": [Function],
          },
          "silenceBroadcast": false,
          "storeReader": StoreReader {
            "executeSelectionSet": [Function],
            "executeStoreQuery": [Function],
            "executeSubSelectedArray": [Function],
            "freezeResults": false,
          },
          "storeWriter": StoreWriter {},
          "typenameDocumentCache": Map {
            Object {
              "definitions": Array [
                Object {
                  "kind": "OperationDefinition",
                  "name": Object {
                    "kind": "Name",
                    "value": "GeneratedClientQuery",
                  },
                  "operation": "query",
                  "selectionSet": Object {
                    "kind": "SelectionSet",
                    "selections": Array [
                      Object {
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "authenticated",
                        },
                        "selectionSet": undefined,
                      },
                    ],
                  },
                },
              ],
              "kind": "Document",
            } => Object {
              "definitions": Array [
                Object {
                  "kind": "OperationDefinition",
                  "name": Object {
                    "kind": "Name",
                    "value": "GeneratedClientQuery",
                  },
                  "operation": "query",
                  "selectionSet": Object {
                    "kind": "SelectionSet",
                    "selections": Array [
                      Object {
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "authenticated",
                        },
                        "selectionSet": undefined,
                      },
                    ],
                  },
                },
              ],
              "kind": "Document",
            },
          },
          "watches": Set {},
        },
        "client": [Circular],
        "resolvers": Object {},
      },
      "mutate": [Function],
      "query": [Function],
      "queryDeduplication": true,
      "queryManager": QueryManager {
        "assumeImmutableResults": false,
        "clientAwareness": Object {
          "name": undefined,
          "version": undefined,
        },
        "dataStore": DataStore {
          "cache": InMemoryCache {
            "addTypename": true,
            "cacheKeyRoot": KeyTrie {
              "weakness": true,
            },
            "config": Object {
              "addTypename": true,
              "dataIdFromObject": [Function],
              "fragmentMatcher": HeuristicFragmentMatcher {},
              "freezeResults": false,
              "resultCaching": true,
            },
            "data": DepTrackingCache {
              "data": Object {
                "ROOT_QUERY": Object {
                  "authenticated": false,
                },
              },
              "depend": [Function],
            },
            "maybeBroadcastWatch": [Function],
            "optimisticData": DepTrackingCache {
              "data": Object {
                "ROOT_QUERY": Object {
                  "authenticated": false,
                },
              },
              "depend": [Function],
            },
            "silenceBroadcast": false,
            "storeReader": StoreReader {
              "executeSelectionSet": [Function],
              "executeStoreQuery": [Function],
              "executeSubSelectedArray": [Function],
              "freezeResults": false,
            },
            "storeWriter": StoreWriter {},
            "typenameDocumentCache": Map {
              Object {
                "definitions": Array [
                  Object {
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "GeneratedClientQuery",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "authenticated",
                          },
                          "selectionSet": undefined,
                        },
                      ],
                    },
                  },
                ],
                "kind": "Document",
              } => Object {
                "definitions": Array [
                  Object {
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "GeneratedClientQuery",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "authenticated",
                          },
                          "selectionSet": undefined,
                        },
                      ],
                    },
                  },
                ],
                "kind": "Document",
              },
            },
            "watches": Set {},
          },
        },
        "fetchQueryRejectFns": Map {},
        "idCounter": 1,
        "inFlightLinkObservables": Map {},
        "link": ApolloLink {
          "request": [Function],
        },
        "localState": LocalState {
          "cache": InMemoryCache {
            "addTypename": true,
            "cacheKeyRoot": KeyTrie {
              "weakness": true,
            },
            "config": Object {
              "addTypename": true,
              "dataIdFromObject": [Function],
              "fragmentMatcher": HeuristicFragmentMatcher {},
              "freezeResults": false,
              "resultCaching": true,
            },
            "data": DepTrackingCache {
              "data": Object {
                "ROOT_QUERY": Object {
                  "authenticated": false,
                },
              },
              "depend": [Function],
            },
            "maybeBroadcastWatch": [Function],
            "optimisticData": DepTrackingCache {
              "data": Object {
                "ROOT_QUERY": Object {
                  "authenticated": false,
                },
              },
              "depend": [Function],
            },
            "silenceBroadcast": false,
            "storeReader": StoreReader {
              "executeSelectionSet": [Function],
              "executeStoreQuery": [Function],
              "executeSubSelectedArray": [Function],
              "freezeResults": false,
            },
            "storeWriter": StoreWriter {},
            "typenameDocumentCache": Map {
              Object {
                "definitions": Array [
                  Object {
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "GeneratedClientQuery",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "authenticated",
                          },
                          "selectionSet": undefined,
                        },
                      ],
                    },
                  },
                ],
                "kind": "Document",
              } => Object {
                "definitions": Array [
                  Object {
                    "kind": "OperationDefinition",
                    "name": Object {
                      "kind": "Name",
                      "value": "GeneratedClientQuery",
                    },
                    "operation": "query",
                    "selectionSet": Object {
                      "kind": "SelectionSet",
                      "selections": Array [
                        Object {
                          "kind": "Field",
                          "name": Object {
                            "kind": "Name",
                            "value": "authenticated",
                          },
                          "selectionSet": undefined,
                        },
                      ],
                    },
                  },
                ],
                "kind": "Document",
              },
            },
            "watches": Set {},
          },
          "client": [Circular],
          "resolvers": Object {},
        },
        "mutationStore": MutationStore {
          "store": Object {},
        },
        "onBroadcast": [Function],
        "pollingInfoByQueryId": Map {},
        "queries": Map {},
        "queryDeduplication": true,
        "queryStore": QueryStore {
          "store": Object {},
        },
        "ssrMode": false,
        "transformCache": WeakMap {},
      },
      "reFetchObservableQueries": [Function],
      "resetStore": [Function],
      "resetStoreCallbacks": Array [],
      "store": DataStore {
        "cache": InMemoryCache {
          "addTypename": true,
          "cacheKeyRoot": KeyTrie {
            "weakness": true,
          },
          "config": Object {
            "addTypename": true,
            "dataIdFromObject": [Function],
            "fragmentMatcher": HeuristicFragmentMatcher {},
            "freezeResults": false,
            "resultCaching": true,
          },
          "data": DepTrackingCache {
            "data": Object {
              "ROOT_QUERY": Object {
                "authenticated": false,
              },
            },
            "depend": [Function],
          },
          "maybeBroadcastWatch": [Function],
          "optimisticData": DepTrackingCache {
            "data": Object {
              "ROOT_QUERY": Object {
                "authenticated": false,
              },
            },
            "depend": [Function],
          },
          "silenceBroadcast": false,
          "storeReader": StoreReader {
            "executeSelectionSet": [Function],
            "executeStoreQuery": [Function],
            "executeSubSelectedArray": [Function],
            "freezeResults": false,
          },
          "storeWriter": StoreWriter {},
          "typenameDocumentCache": Map {
            Object {
              "definitions": Array [
                Object {
                  "kind": "OperationDefinition",
                  "name": Object {
                    "kind": "Name",
                    "value": "GeneratedClientQuery",
                  },
                  "operation": "query",
                  "selectionSet": Object {
                    "kind": "SelectionSet",
                    "selections": Array [
                      Object {
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "authenticated",
                        },
                        "selectionSet": undefined,
                      },
                    ],
                  },
                },
              ],
              "kind": "Document",
            } => Object {
              "definitions": Array [
                Object {
                  "kind": "OperationDefinition",
                  "name": Object {
                    "kind": "Name",
                    "value": "GeneratedClientQuery",
                  },
                  "operation": "query",
                  "selectionSet": Object {
                    "kind": "SelectionSet",
                    "selections": Array [
                      Object {
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "authenticated",
                        },
                        "selectionSet": undefined,
                      },
                    ],
                  },
                },
              ],
              "kind": "Document",
            },
          },
          "watches": Set {},
        },
      },
      "typeDefs": Object {
        "definitions": Array [
          Object {
            "directives": Array [],
            "fields": Array [
              Object {
                "arguments": Array [],
                "directives": Array [],
                "kind": "FieldDefinition",
                "name": Object {
                  "kind": "Name",
                  "value": "authenticated",
                },
                "type": Object {
                  "kind": "NonNullType",
                  "type": Object {
                    "kind": "NamedType",
                    "name": Object {
                      "kind": "Name",
                      "value": "Boolean",
                    },
                  },
                },
              },
            ],
            "interfaces": Array [],
            "kind": "ObjectTypeExtension",
            "name": Object {
              "kind": "Name",
              "value": "Query",
            },
          },
        ],
        "kind": "Document",
        "loc": Object {
          "end": 49,
          "source": Object {
            "body": "extend type Query {
  authenticated: Boolean!
}",
            "locationOffset": Object {
              "column": 1,
              "line": 1,
            },
            "name": "GraphQL request",
          },
          "start": 0,
        },
      },
      "version": "2.6.3",
      "watchQuery": [Function],
    }
  }
>
  <ContextProvider
    value="light"
  >
    <div
      className="appWrapperLight"
    >
      <BrowserRouter>
        <Navigation
          toggleTheme={[Function]}
        />
        <Switch>
          <AnonymousRoute
            component={[Function]}
            path="/login"
          />
          <AuthRoute
            exact={true}
            path="/"
            render={[Function]}
          />
          <AuthRoute
            component={[Function]}
            path="/logout"
          />
          <AuthRoute
            component={[Function]}
            exact={true}
            path="/episodes"
          />
          <AuthRoute
            component={[Function]}
            path="/episodes/:episodeId"
          />
          <AuthRoute
            component={[Function]}
            exact={true}
            path="/characters"
          />
          <AuthRoute
            component={[Function]}
            path="/characters/:characterId"
          />
          <AuthRoute
            component={[Function]}
            path="/starships/:starshipId"
          />
        </Switch>
      </BrowserRouter>
    </div>
  </ContextProvider>
</ApolloProvider>
`;
